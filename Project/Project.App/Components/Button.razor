@*
    Button
*@

@if (string.IsNullOrEmpty(Url))
{
    <button class="@_cssClass" type="@Type" disabled="@Disabled"
            @onclick="@OnClickEvt"
            @attributes="AdditionalAttributes">

        @if (!string.IsNullOrEmpty(Icon))
        {
            <i class="@Icon" />
        }

        @Text 

    </button>
}
else
{
    <NavLink class="@_cssClass"
             href="@Url"
             @attributes="AdditionalAttributes">

        @if (!string.IsNullOrEmpty(Icon))
        {
            <i class="@Icon" />
        }

        @Text

    </NavLink>
}

@code {

    private string _cssClass => $"btn-component btn-component-{Color.ToLower()} {(Outline ? "btn-component-outline" : "")} {CssClass}";

    /// <summary>
    /// button, submit, reset
    /// </summary>
    [Parameter] public string Type { get; set; } = "button";

    [Parameter] public string Text { get; set; }

    [Parameter] public string CssClass { get; set; }

    [Parameter] public bool Outline { get; set; }

    /// <summary>
    /// Parameters: red, pink, blue, green, orange, yellow
    /// </summary>
    [Parameter] public string Color { get; set; }

    /// <summary>
    /// NavLink
    /// </summary>
    [Parameter] public string Url { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; }

    [Parameter] public EventCallback<object> OnClick { get; set; } = new EventCallback<object>();
    [Parameter] public object OnClickParameter { get; set; }

    private async Task OnClickEvt(MouseEventArgs e)
    {
        await OnClick.InvokeAsync(OnClickParameter);
    }

    /// <summary>
    /// Icon from Font Awesome [fa-*]
    /// </summary>
    [Parameter] public string Icon { get; set; } = string.Empty;

    [Parameter] public bool Disabled { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (Icon != string.Empty)
        if (!Icon.ToLower().Contains("fa fa-") && !Icon.ToLower().Contains("fas fa-") && !Icon.ToLower().Contains("far fa-"))
        {
            Icon = "fas fa-" + Icon;
        }
    }

}
